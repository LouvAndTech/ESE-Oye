@use "variables" as v;

body{
  background-color: v.$backcolor;
  margin: 0;
  font-size: 12px;
  color: v.$textcolor;
  min-height: 100vh;
}

.btn{
  border: none;
  border-radius: .7em;
  padding: 10px 20px;
  font-size: 1.2em;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  margin: 5px;
  box-shadow: 0px 4px 1px 0px rgba(0, 0, 0, .6);

  &:hover:not(:disabled){
    transform: scale(1.2);
  }
}

.fill{
  border: 0;
  color: v.$textcolor;
  background-color: v.$maincolor;

  &:disabled{
    border: 1px solid v.$disabledBorder;
    background-color: transparent;
    color: v.$disabledColor;
  }
}

.unfill{
  color: v.$maincolor;
  background-color: transparent;
  border: 1px solid v.$maincolor;

  &:disabled{
    border: 1px solid v.$disabledBorder;
    color: v.$disabledColor;
  }
}

.textBox{
  position: relative;

  input, textarea{
    border: none;
    border-radius: .5em;
    padding: 10px 20px;
    font-size: 1.2em;
    min-width: 3em;
    cursor: text;
    font-weight: bold;
    transition: all 0.3s ease;
    margin: 5px;
    background-color: v.$backcolor;
    color: v.$textcolor;
    border: 1px solid v.$maincolor;
    resize: none;
    &:focus{
      outline: none;
    }
    &:required ~ .textBox_placeholder::after{
      content: " *";
      color: v.$dangerColor;
    }
    &:disabled{
      border: 1px solid v.$disabledBorder;
      color: v.$disabledColor;
    }
    &:disabled ~ .textBox_placeholder{
      color: v.$disabledColor;
      &::after{
        color: v.$disabledColor;
      }
    }
  }

  .error{
    border: 1px solid v.$dangerColor;
  }
  .error ~ .textBox_placeholder{
    color: v.$dangerColor;
    span{
      color: v.$dangerColor;
    }
  }

  .textBox_placeholder{
    color: v.$maincolor;
    position: absolute;
    left: .8em;
    transition: all 0.2s;
    text-decoration: none;
    background-color: v.$backcolor;
    font-weight: bold;
    padding: 0 .3em;
    border-radius: 10px;

    transform: translate(0, 1.5em);
    span{
      color: v.$dangerColor;
    }
    &:hover{
      cursor: text;
    }
  }

  input:focus ~ .textBox_placeholder,
  input:not(:placeholder-shown) ~ .textBox_placeholder,
  textarea:focus ~ .textBox_placeholder,
  textarea:not(:placeholder-shown) ~ .textBox_placeholder{
    transform: translate(.5em, 0);
    font-size: .8em;
  }
}


.custom_checkbox{
  display: flex;
  align-items: center;
  width: fit-content;

  .checkbox{
    position: relative;
    display: inline-block;
    width: 4em;
    height: 2em;
    border-radius: 100px;
    cursor: pointer;
    transition: all 0.3s ease;
    margin: 5px;

    input{
      opacity: 0;
      width: 0;
      height: 0;
      &:checked ~ .checkbox_check{
        background-color: v.$maincolor;
        &:after{
          left: 2.2em;
        }
      }
      &:disabled ~ .checkbox_check{
        background-color: v.$disabledColor;
        &:after{
          background-color: v.$disabledBorder;
        }
      }
    }

    .checkbox_check{
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 100px;
      transition: all 0.3s ease;
      background-color: v.$secondcolor;
      &:after{
        content: "";
        position: absolute;
        transition: all 0.3s ease;
        width: 1.6em;
        height: 1.6em;
        background-color: v.$textcolor;
        border-radius: 100px;
        left: .2em;
        top: .2em;
      }
    }
  }
}